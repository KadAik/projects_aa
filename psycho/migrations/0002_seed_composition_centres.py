# Generated by Django 5.2.7 on 2025-10-20 16:39

from django.db import migrations
import logging

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)


def populate_composition_centres(apps, schema_editor):
    """
    Populate the database with initial composition centres.
    """
    CompositionCentre = apps.get_model("psycho", "CompositionCentre")

    centres = [
        {"name": "Cotonou", "location": "CEG Gbégamey"},
        {"name": "Porto-Novo", "location": "Lycée Béhanzin"},
        {"name": "Lokossa", "location": "CEG 1 Lokossa"},
        {"name": "Parakou", "location": "Lycée Mathieu Bouké"},
        {"name": "Abomey", "location": "Lycée Mafory Bangoura"},
        {"name": "Natitingou", "location": "CEG 1 Natitingou"},
    ]

    created_count = 0
    existing_count = 0

    # Create centres only if they don't exist
    for centre_data in centres:
        obj, created = CompositionCentre.objects.get_or_create(
            name=centre_data["name"], defaults={"location": centre_data["location"]}
        )
        if created:
            created_count += 1
            logger.info(f"Created composition centre: {centre_data['name']}")
        else:
            existing_count += 1
            logger.info(f"Composition centre already exists: {centre_data['name']}")

    logger.info(f"Migration complete: {created_count} new composition centres created.")
    logger.info(f"Found {existing_count} existing composition centres.")


class Migration(migrations.Migration):

    dependencies = [
        ("psycho", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(
            populate_composition_centres, reverse_code=migrations.RunPython.noop
        ),
    ]
